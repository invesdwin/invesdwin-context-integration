###############################
#			      #
# Collectives configuration   #
#			      #
###############################
##
# ----------------------------------------------------------------------------------
#                                | nprocs < algorithmProc | nprocs >= algorithmProc |
#-----------------------------------------------------------------------------------
#| message size <  algorithmSize |      algorithm11       |      algorithm12        |
#-----------------------------------------------------------------------------------
#| message size >= algorithmSize |      algorithm21       |      algorithm22        |  
#-----------------------------------------------------------------------------------
#where algorithm can be bcast, gather, scatter, ...

#FORMAT
#algorithmSize=<message size>
#algorithmProc=<nprocs>
#algorithm11=<number>
#algorithm12=<number>
#algorithm21=<number>
#algorithm22=<number>

#Notice that in barrier and in alltoallv it makes no sense use message size. In barrier there's no message. 
# In alltoallv, each process may have differents messages sizes.

#If any Exception occurs when reading or if the tag doesn't exist in this file, a default value will be used.

#BCAST algorithms:
#  /**
#  * MST-algorithm for Broadcast
#  */
#  private static final int MST_BCAST   = 1;
#  /**
#  * Non-Blocking FT algorithm for Broadcast
#  */
#  private static final int NB_BCAST    = 2;
#  /**
#  * Blocking FT algorithm for Broadcast
#  */
#  private static final int B_BCAST     = 3;
#  /**
#  * Duplex algorithm for broadcast
#  */
#  private static final int DUP_BCAST  = 4;
#  /**
#  * FaT algorithm for broadcast
#  */
#  private static final int FaT_BCAST  = 5;
# bcast message size
bcastSize=8192
# bcast process number
bcastProc=16
#algorithms
bcast11=3
bcast12=1
bcast21=1
bcast22=1


#GATHER algorithms:
#  /**
#  * Non-Blocking FT algorithm for Gather
#  */
#  private static final int NB_GATHER = 10;
#  /**
#  * MST-algorithm for Gather
#  */
#  private static final int MST_GATHER	 = 11;
#  /**
#  * Non-Blocking FT algorithm 1 for Gather
#  */
#  private static final int NB1_GATHER	 = 12;
#  /**
#  * Blocking FT algorithm for Gather
#  */
#  private static final int B_GATHER	 = 13;

#  gather message size
gatherSize=1024
# gather process number
gatherProc=64
#algorithms
gather11=12
gather12=11
gather21=12
gather22=12

#SCATTER algorithms:
#  /**
#  * Non-Blocking FT algorithm for Scatter
#  */
#  private static final int NB_SCATTER = 20;
#  /**
#  * MST-algorithm for Scatter
#  */  
#  private static final int MST_SCATTER = 21;

#  scatter message size
scatterSize=1024
# scatter process number
scatterProc=8
#algorithms
scatter11=20
scatter12=21
scatter21=20
scatter22=20

#GATHERV algorithms:
#  /**
#  * Non-Blocking FT algorithm for Gatherv
#  */
#  private static final int NB_GATHERV = 30;
#  /**
#  * MST-algorithm for Gatherv
#  */
#  private static final int MST_GATHERV	 = 31;
#  /**
#  * Non-Blocking FT algorithm version 1 for Gatherv
#  */
#  private static final int NB1_GATHERV	 = 32;
#  /**
#  * Blocking FT algorithm for Gatherv
#  */
#  private static final int B_GATHERV	 = 33;

#  gatherv message size
gathervSize=1024
# gatherv process number
gathervProc=64
#algorithms
gatherv11=32
gatherv12=31
gatherv21=32
gatherv22=32

#SCATTERV algorithms:
#  /**
#  * Non-Blocking FT algorithm for Scatterv
#  */
#  private static final int NB_SCATTERV = 40;
#  /**
#  * MST-algorithm for Scatterv
#  */ 
#  private static final int MST_SCATTERV = 41;


#  scatterv message size
scattervSize=1024
# scatterv process number
scattervProc=8
#algorithms
scatterv11=40
scatterv12=41
scatterv21=40
scatterv22=40

#ALLGATHER algorithms:
# /**
# * Non-Blocking FT algorithm for Allgather
# */
# private static final int NB_ALLGATHER = 50;
# /**
# * Non-Blocking BDE-algorithm for Allgather
# */
# private static final int NB_BDE_ALLGATHER   = 51;
# /**
# * Blocking BKT-algorithm for Allgather
# */
# private static final int B_BKT_ALLGATHER    = 52;
# /**
# * Duplex algorithm for Allgather
# */
# private static final int DUPLEX_ALLGATHER = 53;
# /**
# * Non-Blocking BKT-algorithm for Allgather
# */
# private static final int NB_BKT_ALLGATHER   = 54;
# /**
# * BT (Exotic) algorithm for Allgather
# */
# private static final int BTe_ALLGATHER   = 55;

#  allgather message size
allgatherSize=8192
# allgather process number
allgatherProc=8
#algorithms
allgather11=55
allgather12=55
allgather21=54
allgather22=54

#ALLGATHERV algorithms:
# /**
# * Non-Blocking FT algorithm for Allgatherv
# */
# private static final int NB_ALLGATHERV = 60;
# /**
# * Non-Blocking BDE-algorithm for Allgatherv
# */
# private static final int NB_BDE_ALLGATHERV   = 61;
# /**
# * Blocking BKT-algorithm for Allgatherv
# */
# private static final int B_BKT_ALLGATHERV    = 62;
# /**
# * Duplex algorithm for Allgatherv
# */
# private static final int DUPLEX_ALLGATHERV = 63;
# /**
# * Non-Blocking BKT-algorithm for Allgatherv
# */
# private static final int NB_BKT_ALLGATHERV   = 64;
# /**
# * BT (Exotic) algorithm for Allgatherv
# */
# private static final int BTe_ALLGATHERV   = 65;

#  allgatherv message size
allgathervSize=8192
# allgatherv process number
allgathervProc=8
#algorithms
allgatherv11=61
allgatherv12=61
allgatherv21=64
allgatherv22=64

#ALLTOALL algorithms:
#  /**
#  * Non-Blocking FT algorithm for Alltoall
#  */
#  private static final int NB_ALLTOALL = 70; 
#  /**
#  * Non-Blocking FT algorithm version 1 for Alltoall
#  */
#  private static final int NB1_ALLTOALL     = 71;
#  /**
#  * Non-Blocking FT algorithm version 2 for Alltoall
#  */  
#  private static final int NB2_ALLTOALL    = 72;
#  /**
#  * Blocking FT algorithm for Alltoall
#  */
#  private static final int B_ALLTOALL   = 73;

#  alltoall message size
alltoallSize=4096
# alltoall process number
alltoallProc=64
#algorithms
alltoall11=73
alltoall12=70
alltoall21=70
alltoall22=70
#note 72 and 73 may fail for very long messages

#ALLTOALLV algorithms:
#  /**
#  * Non-Blocking FT algorithm for Alltoallv
#  */
#  private static final int NB_ALLTOALLV = 80; 
#  /**
#  * Non-Blocking FT algorithm version 1 for Alltoallv
#  */
#  private static final int NB1_ALLTOALLV     = 81;
#  /**
#  * Non-Blocking FT algorithm version 2 for Alltoallv
#  */  
#  private static final int NB2_ALLTOALLV    = 82;
#  /**
#  * Blocking FT algorithm for Alltoallv
#  */
#  private static final int B_ALLTOALLV   = 83;

# alltoallv process number
alltoallvProc=32
#algorithms
alltoallv11=81
alltoallv12=80

#REDUCE algorithms:
#  /**
#  * Non-Blocking FT algorithm for Reduce
#  */ 
#  private static final int NB_REDUCE = 90;
#  /**
#  * MST-algorithm for Reduce
#  */
#  private static final int MST_REDUCE	= 91;
#  /**
#  * Blocking FT algorithm for Reduce
#  */
#  private static final int B_REDUCE	= 92;


#  reduce message size
reduceSize=4096
# reduce process number
reduceProc=64
#algorithms
reduce11=92
reduce12=91
reduce21=91
reduce22=91

#ALLREDUCE algorithms:
#  /**
#  * Non-Blocking FT algorithm for Allreduce
#  */ 
#  private static final int NB_ALLREDUCE  = 100;
#  /**
#  * Blocking BDE-algorithm for Allreduce
#  */  
#  private static final int B_BDE_ALLREDUCE    = 101;
#  /**
#  * Non-Blocking BDE-algorithm for Allreduce
#  */  
#  private static final int NB_BDE_ALLREDUCE   = 102;
#  /**
#  * Duplex algorithm for Allreduce
#  */  
#  private static final int DUPLEX_ALLREDUCE = 103;
#  /**
#  * BT (Exotic) algorithm for Allreduce
#  */  
#  private static final int BTe_ALLREDUCE = 104;

#  allreduce message size
allreduceSize=8192
# allreduce process number
allreduceProc=32
#algorithms
allreduce11=104
allreduce12=103
allreduce21=104
allreduce22=103

#REDUCESCATTER algorithms:
#  /**
#  * Duplex algorithm for Reduce-Scatter
#  */ 
#  private static final int DUPLEX_REDUCESCATTER = 110;
#  /**
#  * Bcloking BDE-algorithm for Reduce-Scatter
#  */  
#  private static final int B_BDE_REDUCESCATTER  = 111;
#  /**
#  * Non-Blocking BDE-algorithm for Reduce-Scatter
#  */  
#  private static final int NB_BDE_REDUCESCATTER   = 112;
#  /**
#  * Blocking BKT-algorithm for Reduce-Scatter
#  */  
#  private static final int B_BKT_REDUCESCATTER    = 113;
#  /**
#  * Non-Blocking BKT-algorithm for Reduce-Scatter
#  */  
#  private static final int NB_BKT_REDUCESCATTER   = 114;


#  reducescatter message size
reducescatterSize=128
# reducescatter process number
reducescatterProc=64
#algorithms
reducescatter11=112
reducescatter12=110
reducescatter21=112
reducescatter22=112

#SCAN algorithms:
#  /**
#  * Non-Blocking FT algorithm for Scan
#  */   
#  private static final int NB_SCAN = 120;
#  /**
#  * OneToOne algorithm for Scan
#  */
#  private static final int UN_SCAN = 121;

#  scan message size
scanSize=8192
# scan process number
scanProc=8
#algorithms
scan11=120
scan12=120
scan21=120
scan22=120

#BARRIER algorithms:
#  /**
#  * BT (Exotic) algorithm for Barrier
#  */
#  private static final int BTe_BARRIER = 130;
#  /**
#  * Duplex algorithm for Barrier (Gather+Bcast)
#  */
#  private static final int DUPLEX_BARRIER = 131;
#  /**
#  * BT algorithm for Barrier
#  */
#  private static final int BT_BARRIER = 132;
#  /**
#  * Duplex Barrier Optimized (nb1FGather+bFTBcast | MSTGather+MSTBcast)
#  */
#  private static final int DUPLEX_BARRIER_OPT = 133;

# barrier process number
barrierProc=32
#algorithms
barrier11=132
barrier12=133
