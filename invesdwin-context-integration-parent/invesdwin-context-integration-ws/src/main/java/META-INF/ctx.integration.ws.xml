<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:sws="http://www.springframework.org/schema/web-services"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/web-services http://www.springframework.org/schema/web-services/web-services.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- Spring-MVC for REST-WS -->
	<mvc:annotation-driven>
		<!-- https://stackoverflow.com/questions/16332092/spring-mvc-pathvariable-with-dot-is-getting-truncated -->
		<mvc:path-matching registered-suffixes-only="true" />
	</mvc:annotation-driven>
	<!-- log Spring-WS Exceptions/Faults correctly -->
	<bean
		class="org.springframework.ws.soap.server.endpoint.SoapFaultAnnotationExceptionResolver" />

	<!-- WS-Security: -->
	<!-- Timestamps cause problems with large messages that take long to transmit 
		or if clock times differ between computers -->
	<!-- Encryption is deactivated because it is very performance internsive. 
		Instead of 10 seconds, a message with 10k entries takes over one minute to 
		be transmitted. To secure a webservice, SSL should be used instead. -->
	<!-- The only security is thus the UsernameToken which hinders other people 
		from using invesdwin webservices without permission. This is in fact a minimal 
		level of security and does not help against MITM/Sniffer attacks. Due to 
		performance reasons it is still the preferred solution. -->
	<bean id="IntegrationWsProperties"
		class="de.invesdwin.context.system.properties.SystemPropertiesDefinition" />
	<bean id="wssInterceptor"
		class="org.springframework.ws.soap.security.wss4j2.Wss4jSecurityInterceptor">

		<!-- OUT -->
		<property name="securementActions" value="UsernameToken" />

		<!-- OUT UsernameToken -->
		<property name="securementUsername"
			value="${de.invesdwin.context.integration.ws.IntegrationWsProperties.WSS_USERNAMETOKEN_USER}" />
		<property name="securementPassword"
			value="${de.invesdwin.context.integration.ws.IntegrationWsProperties.WSS_USERNAMETOKEN_PASSWORD}" />
		<property name="securementPasswordType" value="PasswordDigest" />
		<property name="securementUsernameTokenNonce" value="true" />
		<property name="securementUsernameTokenCreated" value="true" />

		<!-- IN -->
		<property name="validationActions" value="UsernameToken" />
		<property name="validationCallbackHandlers">
			<list>
				<!-- IN UsernameToken -->
				<ref bean="authenticationHandler" />
			</list>
		</property>
	</bean>
	<bean id="authenticationHandler"
		class="org.springframework.ws.soap.security.wss4j2.callback.SimplePasswordValidationCallbackHandler">
		<property name="users">
			<props>
				<prop
					key="${de.invesdwin.context.integration.ws.IntegrationWsProperties.WSS_USERNAMETOKEN_USER}">
					${de.invesdwin.context.integration.ws.IntegrationWsProperties.WSS_USERNAMETOKEN_PASSWORD}
				</prop>
			</props>
		</property>
	</bean>

	<!-- securing rest services here per default, specific services can be reconfigured 
		by addin more security http tags for those and overriding this config thus -->
	<security:http authentication-manager-ref="springWebAuthenticationManager"
		use-expressions="true" pattern="/spring-web/**">

		<security:csrf disabled="true" />
		<security:headers>
			<security:frame-options policy="SAMEORIGIN" />
		</security:headers>

		<security:http-basic />

		<security:intercept-url pattern="/spring-web/**"
			access="hasRole('_SPRING_WEB_')" />
	</security:http>

	<security:authentication-manager id="springWebAuthenticationManager">
		<security:authentication-provider>
			<security:user-service>
				<security:user
					name="${de.invesdwin.context.integration.ws.IntegrationWsProperties.SPRING_WEB_USER}"
					password="${de.invesdwin.context.integration.ws.IntegrationWsProperties.SPRING_WEB_PASSWORD}"
					authorities="_SPRING_WEB_" />
			</security:user-service>
		</security:authentication-provider>
	</security:authentication-manager>


</beans>