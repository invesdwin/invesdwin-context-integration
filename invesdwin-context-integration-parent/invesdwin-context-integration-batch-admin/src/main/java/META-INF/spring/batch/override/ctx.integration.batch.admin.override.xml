<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- http://docs.spring.io/spring-batch-admin/reference/reference.xhtml 
		Overriding Components from Spring Batch Admin The system tries to provide 
		some useful defaults for things like transaction manager, job repository, 
		job registry etc. Most of these live in the manager jar in a special place: 
		META-INF/spring/batch/bootstrap. If you want to override them, just add your 
		own versions of the same bean definitions to a Spring XML config file in 
		META-INF/spring/batch/override (these are guaranteed to load after the bootstrap 
		files, so they can override default definitions). You could use this to override 
		the data source definition as an alternative to the environment settings 
		described above. -->

	<bean id="jobRegistry"
		class="de.invesdwin.context.integration.batch.admin.internal.ParentDelegateJobRegistry" />

</beans>